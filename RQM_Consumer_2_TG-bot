####################################ячейка в Google Colab №1 - установка и импорт библиотек###########################################
#установка библиотек
!pip install pika

#импорт модулей 
import pika
import json
import random
import requests
from datetime import datetime

####################################ячейка в Google Colab №2 - потребление из RabbitMQ###########################################
# Подключение к серверу RabbitMQ server в облачной платформе cloudamqp.com 
connection = pika.BlockingConnection(pika.URLParameters('.........здесь взять адрес подключения к своему инстансу в https://customer.cloudamqp.com/instance'))
channel = connection.channel()

#объявление очереди RQM
my_queue='OtherQuestionsQueue' #ваше название очереди
questions_queue = channel.queue_declare(queue=my_queue)

#Получить свой TG-токен как описано тут https://medium.com/codex/using-python-to-send-telegram-messages-in-3-simple-steps-419a8b5e5e2
# 1.Open your telegram app and search for BotFather. (A built-in Telegram bot that helps users create custom Telegram bots)
# 2.Type /newbot to create a new bot
# 3.Give your bot a name & a username
# 4.Copy your new Telegram bot’s token

#задаем свой TG-токен
TOKEN = "....здесь ваш ТГ-тоген........."

#надо, чтобы получить chat_id, потом можно закомментить эту строку 
#url = f"https://api.telegram.org/bot{TOKEN}/getUpdates"

#задаем chat_id своего пользователя TG
chat_id = "....здесь ID вашего пользователя ТГ........"

#определяем функцию обратного вызова для потребления сообщений из очереди RQM
def on_inputs_message(ch, method, properties, body):
 try:
  data = json.loads(body)
  print("Входящее обращение от ", data['id'], "клиент ", data['name'], "тема ", data['subject'], "содержание ", data['content'])

  id=data['id']
  name=data['name']
  subject = data['subject']
  content = data['content']
  now=datetime.now()

  #формируем сообщение для TG-чата
  txt = (now.strftime("%m/%d/%Y, %H:%M:%S"), "Входящее обращение от ", data['id'], "клиент ", data['name'], "тема ", data['subject'], "содержание ", data['content'])
  url = f"https://api.telegram.org/bot{TOKEN}/sendMessage?chat_id={chat_id}&text={txt}"
  #отправляем сообение в ТГ-чат
  print(requests.get(url).json()) # this sends the message

 except Exception as e:
  #запись ошибок в лог-файл на Google Диске
  error_str = f"Error: {str(e)}, Value: {data}\n"
  with open("dlq.txt", "a") as f:
      f.write(error_str)
  print(f"Error: {str(e)}")

#потребляем данные из RabbitMQ
while True:
  print('Waiting for messages. To exit press CTRL+C')
  channel.basic_consume(queue=questions_queue.method.queue, on_message_callback=on_inputs_message, auto_ack=True)
  channel.start_consuming()

####################################ячейка в Google Colab №3 - закрытие соединения###########################################
#Закрываем соединения
channel.close()
connection.close()
